{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoItem","todo","toggleTodo","className","type","onChange","id","checked","complete","task","TodoList","map","item","key","App","useState","setTodo","todoItemRef","useRef","useEffect","items","JSON","parse","localStorage","getItem","setItem","stringify","ref","onClick","e","itemName","current","value","prev","uuid","removeItem","findId","todoCopy","selectedItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAgBeA,MAbf,YAAyC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKtB,OACI,yBAAKC,UAAU,YACX,2BAAOC,KAAK,WAAWC,SAN/B,WACIH,EAAWD,EAAKK,KAKmCC,QAASN,EAAKO,WAC5DP,EAAKQ,OCFHC,MANf,YAAyC,IAArBT,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACtB,OAAOD,EAAKU,KAAI,SAAAC,GACZ,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAKN,GAAIL,KAAMW,EAAMV,WAAYA,Q,QC8ChDY,MA9Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACJd,EADI,KACEe,EADF,KAELC,EAAcC,mBAkCpB,OAhCAC,qBAAU,WACN,IAAIC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SACxCJ,GACAJ,EAAQI,KAEb,IAEHD,qBAAU,WACNI,aAAaE,QAAQ,OAAQJ,KAAKK,UAAUzB,MAC7C,CAACA,IAwBA,yBAAKE,UAAU,iBACX,2BAAOwB,IAAKV,EAAab,KAAK,SAC9B,4BAAQwB,QAxBhB,SAAuBC,GACnB,IAAMC,EAAWb,EAAYc,QAAQC,MACpB,KAAbF,IACJd,GAAQ,SAAAiB,GACJ,MAAM,GAAN,mBAAWA,GAAX,CAAiB,CAAE3B,GAAI4B,cAAQzB,KAAMqB,EAAUtB,UAAU,QAE7DS,EAAYc,QAAQC,MAAQ,QAkBxB,YACA,4BAAQJ,QAhBhB,WACIL,aAAaY,WAAW,QACxBnB,EAAQ,MAcJ,aACA,kBAAC,EAAD,CAAUf,KAAMA,EAAMC,WAZ9B,SAAoBkC,GAChB,IAAIC,EAAQ,YAAOpC,GACfqC,EAAeD,EAASE,MAAK,SAAA3B,GAAI,OAAIA,EAAKN,KAAO8B,KACrDE,EAAa9B,UAAY8B,EAAa9B,SACtCQ,EAAQqB,QCjChBG,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.3010c5d3.chunk.js","sourcesContent":["import React from \"react\"\nimport \"../index.css\"\n\nfunction TodoItem({ todo, toggleTodo }) {\n    function handleChange() {\n        toggleTodo(todo.id)\n    }\n\n    return (\n        <div className=\"todoItem\">\n            <input type=\"checkbox\" onChange={handleChange} checked={todo.complete} />\n            {todo.task}\n        </div>\n    )\n}\n\nexport default TodoItem\n","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nfunction TodoList({ todo, toggleTodo }) {\n    return todo.map(item => {\n        return <TodoItem key={item.id} todo={item} toggleTodo={toggleTodo} />\n    })\n}\n\nexport default TodoList\n","import React, { useState, useRef, useEffect } from \"react\"\nimport Todolist from \"./components/TodoList\"\nimport { v4 as uuid } from \"uuid\"\nimport \"../src/index.css\"\n\nfunction App() {\n    const [todo, setTodo] = useState([])\n    const todoItemRef = useRef()\n\n    useEffect(() => {\n        let items = JSON.parse(localStorage.getItem(\"todo\"))\n        if (items) {\n            setTodo(items)\n        }\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(\"todo\", JSON.stringify(todo))\n    }, [todo])\n\n    function handleAddTodo(e) {\n        const itemName = todoItemRef.current.value\n        if (itemName === \"\") return\n        setTodo(prev => {\n            return [...prev, { id: uuid(), task: itemName, complete: false }]\n        })\n        todoItemRef.current.value = null\n    }\n\n    function handleClear() {\n        localStorage.removeItem(\"todo\")\n        setTodo([])\n    }\n\n    function toggleTodo(findId) {\n        let todoCopy = [...todo]\n        let selectedItem = todoCopy.find(item => item.id === findId)\n        selectedItem.complete = !selectedItem.complete\n        setTodo(todoCopy)\n    }\n\n    return (\n        <div className=\"todoContainer\">\n            <input ref={todoItemRef} type=\"text\" />\n            <button onClick={handleAddTodo}>Add Todo</button>\n            <button onClick={handleClear}>Clear All</button>\n            <Todolist todo={todo} toggleTodo={toggleTodo} />\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}